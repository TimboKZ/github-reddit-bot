<!DOCTYPE html>
<html lang="en" xmlns:v-on="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8">
    <title>GitHub Reddit Bot</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/vue"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</head>
<body>


<div class="container">
    <div id="app">
        <h1>Hello, /u/{{user.name}} <a class="btn btn-primary btn-md" href="{{baseUrl}}/logout">Sign out</a></h1>

        <hr>

        <h2>Subreddits you moderate
            <button class="btn btn-default btn-sm" v-on:click="fetchModdedSubs">Refresh</button>
        </h2>

        <p>Adding a subreddit here will allow you to see all mappings associated with this subreddit. A check will be performed to confirm that you are indeed a moderator of the subreddit you've entered.</p>

        <table class="table table-striped">
            <thead>
            <tr>
                <th>Subreddit</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            <tr v-for="sub in moddedSubs">
                <td>\{{ sub.subreddit }}</td>
                <td><button class="btn btn-danger" v-on:click="deleteSub(sub.id)">Delete</button></td>
            </tr>
            <tr>
                <!-- TODO: Add onKeyUp:Enter to all forms -->
                <td><input v-model="subInput" class="form-control" placeholder="Enter a subreddit name"></td>
                <td><button class="btn btn-primary" v-on:click="addSub">Add</button></td>
            </tr>
            </tbody>
        </table>

        <div v-if="subError">
            <div class="alert alert-danger" role="alert"><strong>Oh snap!</strong> \{{subError}}</div>
        </div>

        <hr>

        <h2>Your mappings
            <button class="btn btn-default btn-sm" v-on:click="fetchMappings">Refresh</button>
        </h2>

        <p>To instruct the bot to begin posting repository updates in your subreddit, add the repository and target subreddit below. Then, setup a <a href="https://developer.github.com/webhooks/creating/">webhook</a> in your repository pointing at <code>https://github-reddit-bot.herokuapp.com/hooks</code>, set content type to <code>application/json</code> and secret to key seen below.</p>

        <table class="table table-striped table-responsive">
            <thead>
            <tr>
                <th>Repository</th>
                <th>Subreddit</th>
                <th>Author</th>
                <th>Secret</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            <tr is="mapping-item" v-for="mapping in mappings" :mapping="mapping"></tr>
            <tr>
                <td><input v-model="mappingInput.repo" class="form-control" placeholder="Enter a repository name"></td>
                <td>
                    <select v-model="mappingInput.subreddit" class="form-control">
                        <option v-for="sub in moddedSubs">\{{sub.subreddit}}</option>
                    </select>
                </td>
                <td></td>
                <td></td>
                <td><button class="btn btn-primary" v-on:click="addMapping">Add</button></td>
            </tr>
            </tbody>
        </table>
    </div>
</div>

<script>
    Vue.component('mapping-item', {
        template: '#mapping-item-template',
        props: ['mapping'],
    });
    new Vue({
        el: '#app',
        data: {
            moddedSubs: [],
            subInput: '',
            subError: false,
            mappings: [],
            mappingInput: {
                repo: '',
                subreddit: '',
            },
            mappingError: false,
        },
        created: function () {
            this.fetchModdedSubs();
            this.fetchMappings();
        },
        methods: {
            fetchModdedSubs: function () {
                var self = this;
                axios.get('/settings/modded-subs').then(function(response) {
                    self.moddedSubs = response.data;
                });
            },
            addSub: function () {
                var self = this;
                axios.put('/settings/modded-subs', {subreddit: self.subInput})
                        .then(function(response) {
                            if(response.data.error) {
                                self.subError = response.data.error.message;
                                return;
                            }
                            self.subError = false;
                            self.subInput = '';
                            self.fetchModdedSubs()
                        })
                        .catch(function(error) {
                            console.error(error.message);
                        });
            },
            deleteSub: function (id) {
                var self = this;
                axios.delete('/settings/modded-subs/' + id)
                        .then(function() {
                            self.fetchModdedSubs()
                        })
                        .catch(function(error) {
                            console.error(error.message);
                        });
            },
            fetchMappings: function () {
                var self = this;
                axios.get('/settings/existing-mappings')
                        .then(function(response) {
                            self.mappings = response.data;
                        });
            },
            addMapping: function () {
                var self = this;
                axios.put('/settings/existing-mappings', {
                    repo: self.mappingInput.repo,
                    subreddit: self.mappingInput.subreddit,
                })
                        .then(function() {
                            self.mappingInput.repo = '';
                            self.mappingInput.subreddit = '';
                            self.fetchMappings()
                        })
                        .catch(function(error) {
                            console.error(error.message);
                        });
            },
            deleteMapping: function (id) {
                var self = this;
                axios.delete('/settings/existing-mappings/' + id)
                        .then(function() {
                            self.fetchMappings()
                        })
                        .catch(function(error) {
                            console.error(error.message);
                        });
            },
        },
    });
</script>
<script type="text/x-template" id="mapping-item-template">
    <tr>
        <td>\{{ mapping.repo }}</td>
        <td>\{{ mapping.subreddit }}</td>
        <td>\{{ mapping.author }}</td>
        <td><code>\{{ mapping.secret }}</code></td>
        <td><button class="btn btn-danger" v-on:click="deleteMapping(mapping.id)">Delete</button></td>
    </tr>
</script>

</body>
</html>
